@model int

@{
    ViewData["Title"] = $"Lesson {Model}";
}

<div class="container lessQuizNum col-10">
    <h3 class="lessQuizNum">Lesson @Model</h3>
    <h1 class="lessName">Logic Gates</h1><br />

    <div class="row">
        <div class="col-9 fs-5">
            In classical computing, logic gates are the basic building blocks that perform certain operations on one or more bits of data.
            They are the simplest form of data processors and all digital systems are based on these gates.
            This review of classical gates will help with understanding quantum gates.
            <br /><hr />
            <h5 class="fw-bold opacity-75">Seven basic types of logic gates:</h5><br />
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">1. AND gate</h5>
            This gate takes two inputs and gives an output of 1 if both inputs are 1, and 0 otherwise.
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">2. OR gate</h5>
            This gate gives an output of 1 if at least one of the inputs is 1, and 0 otherwise.
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">3. NOT gate</h5>
            This gate has only one input and one output. The output is the opposite of the input: if you input 1, you get out 0, and vice versa.
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">4. NAND gate</h5>
            This gate is the opposite of the AND gate. It gives an output of 0 only when both inputs are 1. In all other cases, it gives an output of 1.
            <br /><br />
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">5. NOR gate</h5>
            This gate is the opposite of the OR gate. It gives an output of 1 only when both inputs are 0. In all other cases, it gives an output of 0.

            <br /><br />
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">6. XOR gate (Exclusive OR)</h5>
            This gate gives an output of 1 only when the inputs are different (one input is 1 and the other is 0).

            <br /><br />
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row rowLess10">
        <div class="col-8 fs-5">
            <h5 class="fw-bold opacity-75">7. XNOR gate (Exclusive NOR)</h5>
            This gate gives an output of 1 when the inputs are the same (either both 1 or both 0).
            <br /><br />
        </div>
        <div class="col-3">
            <img class="w-100 h-25 mt-5 rounded-3 border border-dark border-3" src="~/images/" />
            <p class="text-center fst-italic">IMAGE TITLE</p>
        </div>
    </div>

    <div class="row">
        <div class="col-9 fs-5">
            <hr />
            By combining these gates in various ways, you can build circuits that perform complex operations. This is the foundation of digital computing: all computer processors are made up of vast numbers of these gates.
        </div>
    </div>

    @await Html.PartialAsync("_TakeQuizPrevNextButtons", Model)
</div>
